#!/bin/bash



# git remote add origin git ...dotfiles
# git fetch origin branchname
# git pull origin branchname

function bluetoothmanager(){


    sudo pacman -S --noconfirm bluez bluez-utils blueman

    sudo systemctl enable bluetooth
    sudo systemctl start bluetooth

}


function notclassified(){


    sudo pacman -S --noconfirm feh
   # echo "feh --recursive --bg-fill --randomize ~/wallpapers" 




}


function baseinstall() {




# here

# if ( set base or set one or set two you want to install)

# list set items by loop 




    sudo pacman -S rofi dmenu sxhkd redshift network-manager-applet vim kitty ttf-firacode-nerd ttf-fira-code --noconfirm

    sudo pacman -S --noconfirm zsh powerline-fonts
    sudo pacman -S --needed git base-devel
    sudo pacman -S docker docker-compose ranger cmus 
	# locale gen sed editor en_us utf-8

	# CRATE NEW USER FOR AMIR AUTOMATICALLY

	# sudo useradd -m -aG autologin amir



}

function wifihotspoterror(){
 # implement iwd with network manager to resolve all the errors completely

 sudo pacman -S --noconfirm iwd
 sudo vim /etc/NetworkManager/conf.d/wifi_backend.conf
# COPY THE BELOW TO THE NEWLY CREATED FILE
# [device]
#wifi.backend=iwd

 sudo systemctl restart NetworkManager


}



function dockerinstall() {

    sudo systemctl enable docker.service
    sudo systemctl start docker.service
    sudo usermod -aG docker $USER
# https://statistics.berkeley.edu/computing/encrypt


}

function zshinstall() {

    #    yay -S zsh oh-my-zsh-git nerd-fonts-hack

    chsh -s /usr/bin/zsh


    mkdir -p .config/zsh
    touch .config/zsh/zsh_{func,alias,themes}
    echo -e " press y to reinstall old alias, any other key to skip\n"
    read y
    if [[ $y == "y" ]]; then
    curl -fsSL https://raw.githubusercontent.com/AmarjithTK/dotfiles/dwm-endeavour/.zsh_extras >>~/.config/zsh/zsh_alias
    fi

    curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh | sh
    # git clone https://github.com/romkatv/powerlevel10k.git $ZSH_CUSTOM/themes/powerlevel10k
    git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ~/.oh-my-zsh/custom/themes/powerlevel10k

    echo 'POWERLEVEL9K_DISABLE_CONFIGURATION_WIZARD=true' >>! ~/.zshrc



    echo 'source ~/.oh-my-zsh/custom/themes/powerlevel10k/powerlevel10k.zsh-theme' >>~/.config/zsh/zsh_themes

    curl -fsSL https://raw.githubusercontent.com/AmarjithTK/dotfiles/dwm-endeavour/zsh-extras-config >>~/.zshrc



}

function aurhelperinstall() {
    cd
    pacman -S --needed git base-devel
    git clone https://aur.archlinux.org/yay.git
    cd yay
    makepkg -si
    cd
}

function extrapackagesinstall() {

    yay -S --noconfirm google-chrome vscodium-bin volctl neofetch htop scrot
    
    yay -S --noconfirm bluez bluez-utils
    sudo systemctl enable bluetooth.service


# make sets of apps and ask user to choose installations


}


function setcron(){


    sudo pacman -S fcron

    sudo systemctl start fcron
    sudo systemctl enable fcron

    crontab cron.txt // this will load the cron.txt to crontab

    # setup cronjob for syncing notepad git,dotfiles git etc


}



# function appimageinstaller() {

#     echo "AppImageLaucher"
#     mkdir -p ~/.local/bin/appimages

# }

# make seperate script for ubuntu based distros

function redshifterinstall() {
    mkdir -p ~/bin
    cd ~/bin
    curl -o redshifter https://raw.githubusercontent.com/wizetek/bash/master/redshifter
    chmod +x redshifter
    cd
}

function codessd(){

    echo "Enter branch name of codessd : "
    read BRANCH 
    git clone git@github.com:AmarjithTK/code-sources.git -b "$BRANCH" ~/code-ssd
}


# use ttf fira code instead

# function firacodeorfont() {

#     echo "Enter a font link or choose default by pressing d \n"
#     read FONT
#     if [[ $FONT == 'd' ]]; then
#         wget -o https://fonts.google.com/download?family=Fira%20Code
#     fi

#     mkdir -p ~/.local/share/fonts
#     cd ~/.local/share/fonts

#     fc-cache -f
#     clear
#     cd

# }

function dwminstall() {

    # base devel on arch or other os

    # cd ~

    git clone git@github.com:AmarjithTK/dwm.git -b dwm-endeavour3 dwm

    cd dwm

    sudo make clean install
    sudo cp dwm.desktop /usr/share/xsessions/
    cd slstatus

    sudo make clean install
    cd

}

function gitconfig() {

    git config --global user.name "AmarjithTK"
    git config --global user.email "amarjithraveendran@gmail.com"
}

function choicerunner() {

    echo -e "Enter your choice \n1)basepackagesinstall \n2)aurhelperinstall \n3)redshifterinstall \n4)zshinstall \n5)dwminstall \n6)extrapackagesinstall \n7)gitconfig 8)codessdclone 9)dockerinstall"
    echo -e "\n Press q to quit"
    read CHOICE
    if [[ $CHOICE == 'q' ]]; then
        echo "Exiting ....."
        exit 1
    fi

    case "$CHOICE" in

    1)
        echo "basepackagesinstall ... \n"
        baseinstall
        echo -e "\ndone ...................\n"
        ;;

    2)
        echo "yay ... \n"
        aurhelperinstall
        echo -e "\ndone ...................\n"
        ;;
    3)
        echo "redshifterinstall ... \n"
        redshifterinstall
        echo -e "\ndone ...................\n"
        ;;
    4)
        echo "zshinstall ... \n"
        zshinstall
        echo -e "\ndone ...................\n"
        ;;
    5)
        echo "dwminstall ... \n"
        dwminstall
        echo -e "\ndone ...................\n"
        ;;
    6)
        echo "aur install ... \n"
    extrapackagesinstall
        echo -e "\ndone ...................\n"
        ;;
    7)
        echo "gitconfig ... \n"
        gitconfig
        echo -e "\ndone ...................\n"
        ;;
    8)
        echo "codessdclone ... \n"
        codessd
        echo -e "\ndone ...................\n"
        ;;
    9)
        echo "docker ... \n"
        dockerinstall
        echo -e "\ndone ...................\n"
        ;;           
    *)
        echo "Wrong choice, exiting ..."
        echo -e "\ndone ...................\n"
        exit 1
        ;;

    esac

}

while true; do
    choicerunner
done
